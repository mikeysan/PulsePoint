#!/bin/bash
# ============================================================
# PulsePoint Deployment Script (Secure Setup)
# ============================================================
# Description:
#   Safely pulls the latest code, updates dependencies,
#   clears cache, copies static files, and restarts services.
# ============================================================

set -e  # Exit on first error

# Configuration
APP_DIR="/opt/webapps/pulsepoint"
STATIC_DIR="/var/www/pulsepoint/static"
GUNICORN_SERVICE="gunicorn-pulsepoint.service"
NGINX_SERVICE="nginx"
APP_USER="pulsepoint"

echo "=========================================="
echo "üöÄ Starting PulsePoint deployment..."
echo "=========================================="

# Must run as masego (deploy user)
if [ "$USER" != "masego" ]; then
    echo "‚ùå This script must run as masego"
    exit 1
fi

cd $APP_DIR

# 1Ô∏è‚É£ Fetch latest changes
echo "üîÑ Pulling latest changes from GitHub..."
git fetch origin main
git reset --hard origin/main

# 2Ô∏è‚É£ Update dependencies
echo "üì¶ Updating Python dependencies..."
source venv/bin/activate
pip install -r backend/requirements.txt --quiet --upgrade
deactivate

# 3Ô∏è‚É£ Copy static files to web directory
echo "üìÅ Updating static files..."
sudo cp -r frontend/static/* $STATIC_DIR/
sudo chown -R $APP_USER:www-data $STATIC_DIR
sudo find $STATIC_DIR -type d -exec chmod 755 {} \;
sudo find $STATIC_DIR -type f -exec chmod 644 {} \;

# 4Ô∏è‚É£ Clear Python cache
echo "üßπ Clearing Python cache..."
find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
find . -type f -name "*.pyc" -delete 2>/dev/null || true

# 5Ô∏è‚É£ Fix ownership (ensure app user owns everything)
echo "üîí Setting permissions..."
sudo chown -R $APP_USER:$APP_USER $APP_DIR
sudo chown masego:pulsepoint $APP_DIR  # Allow masego to deploy
sudo chmod 770 $APP_DIR

# 6Ô∏è‚É£ Restart services
echo "üîÅ Restarting Gunicorn..."
sudo systemctl restart $GUNICORN_SERVICE || {
  echo "‚ùå ERROR: Gunicorn restart failed"
  sudo journalctl -u $GUNICORN_SERVICE -n 20 --no-pager
  exit 1
}

echo "üîÅ Reloading Nginx..."
sudo systemctl reload $NGINX_SERVICE || {
  echo "‚ùå ERROR: Nginx reload failed"
  sudo journalctl -u $NGINX_SERVICE -n 20 --no-pager
  exit 1
}

# 7Ô∏è‚É£ Verify services
echo "‚úÖ Verifying services..."
sleep 2

if systemctl is-active --quiet $GUNICORN_SERVICE; then
    echo "‚úÖ Gunicorn is running"
else
    echo "‚ùå Gunicorn failed to start!"
    sudo journalctl -u $GUNICORN_SERVICE -n 30 --no-pager
    exit 1
fi

if systemctl is-active --quiet $NGINX_SERVICE; then
    echo "‚úÖ Nginx is running"
else
    echo "‚ùå Nginx failed to start!"
    exit 1
fi

# 8Ô∏è‚É£ Show recent logs
echo ""
echo "üìã Recent Gunicorn logs:"
sudo tail -10 /var/log/webapps/pulsepoint/error.log

echo ""
echo "=========================================="
echo "üéâ Deployment complete!"
echo "=========================================="
echo ""
echo "Next steps:"
echo "  1. Test locally: curl -k https://localhost/api/health"
echo "  2. Test live: https://pulsepoint.whoismikey.net"
echo "  3. Check logs: sudo journalctl -u $GUNICORN_SERVICE -f"
echo ""
